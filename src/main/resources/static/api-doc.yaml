openapi: 3.0.1
info:
  title: API Sistema financeiro
  description: API para sistemas de gestão de contas e financeiro.
  version: 1.0.0
  contact:
    name: Developer Support
    email: rafael.kanasiro@gmail.com
  license:
    name: "Licença: GPLv3"
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
servers:
  - url: http://localhost:8080/api/v1
    description: Ambiente local
paths:
  /conta:
    post:
      summary: Cria uma nova conta
      responses:
        201:
          description: "Criado"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conta"
        404:
          $ref: "#/components/responses/404"
        400:
          $ref: "#/components/responses/400"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idPessoa:
                  type: integer
                  minimum: 1
                tipoConta:
                  type: integer
                  minimum: 1
                  maximum: 2

  /conta/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: integer
          minimum: 1
        required: true
    get:
      summary: Consulta o saldo de uma conta
      responses:
        200:
          description: "Sucesso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  saldo:
                    type: number
                    format: float
                    example: 2500.0
        404:
          $ref: "#/components/responses/404"
        400:
          $ref: "#/components/responses/400"
    patch:
      summary: Bloqueia uma conta
      responses:
        200:
          description: "Sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conta"
        404:
          $ref: "#/components/responses/404"
        400:
          $ref: "#/components/responses/400"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                flagAtivo:
                  type: boolean
                  example: false
                  description: Aceita somente valor falso

  /conta/{id}/depositar:
    parameters:
      - name: id
        in: path
        schema:
          type: integer
          minimum: 1
        required: true
    post:
      summary: Realiza operação de depósito de uma conta para outra
      responses:
        200:
          description: "Sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conta"
        404:
          $ref: "#/components/responses/404"
        400:
          $ref: "#/components/responses/400"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idContaOrigem:
                  type: integer
                  minimum: 1
                valor:
                  type: number
                  format: float
                  example: 1000.0

  /conta/{id}/sacar:
    parameters:
      - name: id
        in: path
        schema:
          type: integer
          minimum: 1
        required: true
    post:
      summary: Realiza operação de saque em uma conta
      responses:
        200:
          description: "Sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conta"
        404:
          $ref: "#/components/responses/404"
        400:
          $ref: "#/components/responses/400"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                valor:
                  type: number
                  format: float
                  example: 1000.0
  /conta/{id}/extrato:
    parameters:
      - name: id
        in: path
        schema:
          type: integer
          minimum: 1
        required: true
      - in: query
        name: dataInicial
        schema:
          type: string
          format: date
          example: "2021-12-12 (yyyy-MM-dd)"
        description: "Data inicial do extrato - se não for especificado é considerado o primeiro dia do mês"
      - in: query
        name: dataFinal
        schema:
          type: string
          format: date
          example: "2021-12-13 (yyyy-MM-dd)"
        description: "Data final do extrato - se não for especificado é considerado o último dia do mês"
    get:
      summary: Consulta o extrato de uma conta do mês atual ou por período definido
      responses:
        200:
          description: "Sucesso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transacao"
                  pageable:
                    type: object
                    properties:
                      sort:
                        $ref: "#/components/schemas/sort"
                      pageNumber:
                        type: integer
                        example: 0
                      pageSize:
                        type: integer
                        example: 10
                      offset:
                        type: integer
                        example: 0
                      paged:
                        type: boolean
                        example: true
                      unpaged:
                        type: boolean
                        example: false
                  totalPages:
                    type: integer
                    example: 2
                  totalElements:
                    type: integer
                    example: 11
                  last:
                    type: boolean
                    example: false
                  number:
                    type: integer
                    example: 0
                  sort:
                    $ref: "#/components/schemas/sort"
                  first:
                    type: boolean
                    example: true
                  numberOfElements:
                    type: integer
                    example: 10
                  size:
                    type: integer
                    example: 10
                  empty:
                    type: boolean
                    example: false
        404:
          $ref: "#/components/responses/404"
        400:
          $ref: "#/components/responses/400"


components:
  schemas:
    Conta:
      type: object
      properties:
        idConta:
          type: integer
          minimum: 1
        idPessoa:
          type: integer
          minimum: 1
        saldo:
          type: number
          format: float
          example: 4000.0
        limiteSaqueDiario:
          type: number
          format: float
          example: 1000.0
        flagAtivo:
          type: boolean
        tipoConta:
          type: string
          example: "CONTA_CORRENTE"
        dataCriacao:
          type: string
          format: date
    Transacao:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        idConta:
          type: integer
          minimum: 1
        valor:
          type: number
          format: float
          example: 1000.0
        dataTransacao:
          type: string
          format: datetime
          example: "2021-12-12T04:53:44.789217"
    sort:
      type: object
      properties:
        sorted:
          type: boolean
          example: true
        unsorted:
          type: boolean
          example: false
        empty:
          type: boolean
          example: false

  responses:
    404:
      description: Recurso não encontrado
      content:
        application/json:
          schema:
            type: object
            properties:
              timestamp:
                type: string
                format: datetime
                example: "2021-12-12 14:18:23"
              status:
                type: integer
                example: 404
              erro:
                type: string
                example: "Not Found"
              mensagem:
                type: string
                example: "Recurso com id 20 não encontrado"

    400:
      description: Falha na validação
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                campo:
                  type: string
                  example: "tipoConta"
                erro:
                  type: string
                  example: "deve ser menor que ou igual à 2"
